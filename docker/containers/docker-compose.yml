version: '3.7'
services:
  redis:
    image: cloud-redis:1.0
    restart: always
    container_name: cloud-redis-container
    logging:
      driver: 'json-file'
      options:
        max-size: '30m'
        max-file: '10'
    deploy:
      resources:
        limits:
          memory: 256M
    command: redis-server --requirepass 1111
    ports:
      - 6379:6379
    networks:
      - cloud-network-my
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=default:redis:6379:0:1111,test:redis:6379:1:1111
    ports:
      - "8099:8081"
    networks:
      - cloud-network-my

  elastic:
    restart: always
    image: elasticsearch:8.5.1
    container_name: elastic-container
    logging:
      driver: 'json-file'
      options:
        max-size: '30m'
        max-file: '10'
    ports:
      - "9200:9200"
      - "9300:9300"

    volumes:
      - esdata:/usr/share/elasticsearch/data
#    environment:
#      - xpack.security.enabled=false
#      - discovery.type=single-node
#      - http.port=9200
#      - http.cors.enabled=true
#      - http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358
#      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
#      - http.cors.allow-credentials=true
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx2048m"
    networks:
      - cloud-network-my

networks:
  cloud-network-my:
    driver: bridge